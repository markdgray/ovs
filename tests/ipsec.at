AT_BANNER([ipsec])

m4_divert_push([PREPARE_TESTS])
[
generate_conf_header() {
  cat <<EOF
# Generated by ovs-monitor-ipsec...do not modify by hand!


config setup
    uniqueids=yes

conn %default
    keyingtries=%forever
    type=transport
    auto=route
    ike=aes_gcm256-sha2_256
    esp=aes_gcm256
    ikev2=insist

EOF
}

generate_conf_psk_connection() {
  local name=$1
  local left=$2
  local src_protoport=$3
  local dst_protoport=$4

  cat <<EOF
conn ${name}
    left=${left}
    right=1.1.1.1
    authby=secret
    leftprotoport=${dst_protoport}
    rightprotoport=${src_protoport}

EOF
}

generate_conf_psk() {
  local name=$1
  local type=$2
  local src_protoport=$3
  local dst_protoport=$4
  local local_ip=$5

  generate_conf_header > etc/ipsec.conf.ref
  if [[ -z ${local_ip} ]]; then
    local_ip=%defaultroute
  fi

  if [[ ${type} == "gre" ]]; then
    generate_conf_psk_connection ${name}-1 ${local_ip} ${src_protoport} ${dst_protoport} >> etc/ipsec.conf.ref
  else
    generate_conf_psk_connection ${name}-in-1 ${local_ip} ${src_protoport} ${dst_protoport} >> etc/ipsec.conf.ref
    generate_conf_psk_connection ${name}-out-1 ${local_ip} ${dst_protoport} ${src_protoport} >> etc/ipsec.conf.ref
  fi

}]
m4_divert_pop([PREPARE_TESTS])

m4_define([OVSDB_START],
  [dnl Create database.
   touch .conf.db.~lock~
   AT_CHECK([ovsdb-tool create conf.db $abs_top_srcdir/vswitchd/vswitch.ovsschema])

   dnl Start ovsdb-server.
   AT_CHECK([ovsdb-server --detach --no-chdir --pidfile --log-file --remote=punix:$OVS_RUNDIR/db.sock], [0], [], [stderr])
   on_exit "kill `cat ovsdb-server.pid`"
   AT_CHECK([[sed < stderr '
/vlog|INFO|opened log file/d
/ovsdb_server|INFO|ovsdb-server (Open vSwitch)/d']])
   AT_CAPTURE_FILE([ovsdb-server.log])

   dnl Initialize database.
   AT_CHECK([ovs-vsctl --no-wait init])]
)

m4_define([OVS_MONITOR_IPSEC_START],
  [dnl Create schema for ovs-monitor-ipsec
   AT_CHECK([cp ${abs_top_srcdir}/vswitchd/vswitch.ovsschema vswitch.ovsschema])

   dnl Create a dummy implementation of /usr/sbin/ipsec
   AT_CHECK([mkdir -p ${ovs_base}/usr/sbin])
   AT_CHECK([mkdir -p ${ovs_base}/etc])
   cat << EOF > ${ovs_base}/usr/sbin/ipsec
#!/bin/sh
echo "$(date): $@" >> ${ovs_base}/ipsec.log
exit 0
EOF
   cat << EOF > ${ovs_base}/usr/sbin/certutil
#!/bin/sh
echo "$(date): $@" >> ${ovs_base}/certutil.log
exit 0
EOF
   cat << EOF > ${ovs_base}/usr/sbin/pk12util
#!/bin/sh
echo "$(date): $@" >> ${ovs_base}/pk12util.log
exit 0
EOF
   cat << EOF > ${ovs_base}/usr/sbin/openssl
#!/bin/sh
echo "$(date): $@" >> ${ovs_base}/openssl.log
exit 0
EOF
   AT_CHECK([chmod +x ${ovs_base}/usr/sbin/ipsec])
   AT_CHECK([chmod +x ${ovs_base}/usr/sbin/certutil])
   AT_CHECK([chmod +x ${ovs_base}/usr/sbin/pk12util])
   AT_CHECK([chmod +x ${ovs_base}/usr/sbin/openssl])
   AT_CHECK([touch ${ovs_base}/etc/ipsec.conf])

   dnl Start ovs-monitor-ipsec
   AT_CHECK([ovs-monitor-ipsec --pidfile=${OVS_RUNDIR}/ovs-monitor-ipsec.pid --detach --log-file --ike-daemon libreswan --root-prefix ${ovs_base} --no-restart-ike-daemon unix:${OVS_RUNDIR}/db.sock])
   on_exit "kill `cat ${OVS_RUNDIR}/ovs-monitor-ipsec.pid`"
   AT_CAPTURE_FILE([${OVS_RUNDIR}/ovs-monitor-ipsec.log])]
)

m4_define([OVS_MONITOR_IPSEC_SHUTDOWN],
  [OVS_APP_EXIT_AND_WAIT_BY_TARGET([ovs-monitor-ipsec], [ovs-monitor-ipsec.pid])])

m4_define([OVSDB_SHUTDOWN],
  [OVS_APP_EXIT_AND_WAIT_BY_TARGET([ovsdb-server], [ovsdb-server.pid])])

AT_SETUP([ipsec -- libreswan psk ipv4 basic configuration])
OVSDB_START
OVS_MONITOR_IPSEC_START

ovs-vsctl --no-wait add-br br-int

check_tunnel() {
  type=$1
  src_protoport=$2
  dst_protoport=$3
  local_ip=$4

  if [[ -z ${local_ip} ]]; then
    ovs-vsctl --no-wait add-port br-int tun -- set interface tun type=${type} options:psk=test options:remote_ip=1.1.1.1
  else
    ovs-vsctl --no-wait add-port br-int tun -- set interface tun type=${type} options:psk=test options:remote_ip=1.1.1.1 options:local_ip=${local_ip}
  fi

  OVS_WAIT_UNTIL([cat etc/ipsec.conf | grep tun])
  generate_conf_psk tun ${type} ${src_protoport} ${dst_protoport} ${local_ip} >> etc/ipsec.conf.ref
  AT_CHECK([diff etc/ipsec.conf etc/ipsec.conf.ref])
  ovs-vsctl --no-wait del-port br-int tun
}

check_tunnel geneve udp udp/6081
check_tunnel vxlan udp udp/4789
check_tunnel stt tcp tcp/7471
check_tunnel gre gre gre
check_tunnel geneve udp udp/6081 1.1.1.2
check_tunnel vxlan udp udp/4789 1.1.1.2
check_tunnel stt tcp tcp/7471 1.1.1.2
check_tunnel gre gre gre 1.1.1.2

OVS_MONITOR_IPSEC_SHUTDOWN
OVSDB_SHUTDOWN
AT_CLEANUP

AT_SETUP([ipsec -- libreswan self-signed ipv4 basic configuration])
OVSDB_START
OVS_MONITOR_IPSEC_START

ovs-vsctl --no-wait add-br br-int

check_tunnel() {
  type=$1
  src_protoport=$2
  dst_protoport=$3
  local_ip=$4

  if [[ -z ${local_ip} ]]; then
    ovs-vsctl --no-wait add-port br-int tun -- set interface tun type=${type} options:psk=test options:remote_ip=1.1.1.1
  else
    ovs-vsctl --no-wait add-port br-int tun -- set interface tun type=${type} options:psk=test options:remote_ip=1.1.1.1 options:local_ip=${local_ip}
  fi

  OVS_WAIT_UNTIL([cat etc/ipsec.conf | grep tun])
  generate_conf_psk tun ${type} ${src_protoport} ${dst_protoport} ${local_ip} >> etc/ipsec.conf.ref
  AT_CHECK([diff etc/ipsec.conf etc/ipsec.conf.ref])
  ovs-vsctl --no-wait del-port br-int tun
}

check_tunnel geneve udp udp/6081
check_tunnel vxlan udp udp/4789
check_tunnel stt tcp tcp/7471
check_tunnel gre gre gre
check_tunnel geneve udp udp/6081 1.1.1.2
check_tunnel vxlan udp udp/4789 1.1.1.2
check_tunnel stt tcp tcp/7471 1.1.1.2
check_tunnel gre gre gre 1.1.1.2

OVS_MONITOR_IPSEC_SHUTDOWN
OVSDB_SHUTDOWN
AT_CLEANUP
